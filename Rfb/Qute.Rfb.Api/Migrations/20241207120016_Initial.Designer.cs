// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Qute.Rfb.Api.Contexts;

#nullable disable

namespace Qute.Rfb.Api.Migrations
{
    [DbContext(typeof(RfbContext))]
    [Migration("20241207120016_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.Cnae", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("rfb_cnaes");
                });

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<decimal?>("CapitalSocial")
                        .HasColumnType("numeric")
                        .HasColumnName("capital_social");

                    b.Property<string>("EnteFederativo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("ente_federativo");

                    b.Property<int?>("NaturezaJuridicaId")
                        .HasColumnType("integer")
                        .HasColumnName("natureza_juridica_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<int?>("Porte")
                        .HasColumnType("integer")
                        .HasColumnName("porte");

                    b.Property<int?>("QualificacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("qualificacao_id");

                    b.HasKey("Id");

                    b.ToTable("rfb_empresas");
                });

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.Estabelecimento", b =>
                {
                    b.Property<string>("Bairro")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("CidadeExterior")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cidade_exterior");

                    b.Property<int?>("CnaeId")
                        .HasColumnType("integer")
                        .HasColumnName("cnae_id");

                    b.PrimitiveCollection<int[]>("CnaesSecundarios")
                        .HasColumnType("integer[]")
                        .HasColumnName("cnaes_secundarios");

                    b.Property<int>("Cnpj")
                        .HasColumnType("integer")
                        .HasColumnName("cnpj");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("complemento");

                    b.Property<string>("Ddd1")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("ddd1");

                    b.Property<string>("Ddd2")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("ddd2");

                    b.Property<string>("DddFax")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("ddd_fax");

                    b.Property<byte>("Dv")
                        .HasColumnType("smallint")
                        .HasColumnName("dv");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("InicioAtividades")
                        .HasColumnType("date")
                        .HasColumnName("inicio_atividades");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("logradouro");

                    b.Property<int?>("MatrizFilial")
                        .HasColumnType("integer")
                        .HasColumnName("matriz_filial");

                    b.Property<int?>("MotivoId")
                        .HasColumnType("integer")
                        .HasColumnName("motivo_id");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("integer")
                        .HasColumnName("municipio_id");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("Numero")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("numero");

                    b.Property<short>("Ordem")
                        .HasColumnType("smallint")
                        .HasColumnName("ordem");

                    b.Property<int?>("PaisId")
                        .HasColumnType("integer")
                        .HasColumnName("pais_id");

                    b.Property<int?>("SituacaoCadastral")
                        .HasColumnType("integer")
                        .HasColumnName("situacao_cadastral");

                    b.Property<DateOnly?>("SituacaoCadastralData")
                        .HasColumnType("date")
                        .HasColumnName("situacao_cadastral_data");

                    b.Property<string>("SituacaoEspecial")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("situacao_especial");

                    b.Property<DateOnly?>("SituacaoEspecialData")
                        .HasColumnType("date")
                        .HasColumnName("situacao_especial_data");

                    b.Property<string>("Telefone1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("telefone1");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("telefone2");

                    b.Property<string>("TelefoneFax1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("telefone_fax");

                    b.Property<string>("TipoLogradouro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tipo_logradouro");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasIndex("Cnpj")
                        .HasDatabaseName("ix_estabelecimentos_cnpj");

                    b.ToTable("rfb_estabelecimentos");
                });

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.MeiSimples", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("MeiExclusao")
                        .HasColumnType("date")
                        .HasColumnName("mei_exclusao");

                    b.Property<DateOnly?>("MeiInclusao")
                        .HasColumnType("date")
                        .HasColumnName("mei_inclusao");

                    b.Property<bool?>("MeiOpcao")
                        .HasColumnType("boolean")
                        .HasColumnName("mei_opcao");

                    b.Property<DateOnly?>("SimplesExclusao")
                        .HasColumnType("date")
                        .HasColumnName("simples_exclusao");

                    b.Property<DateOnly?>("SimplesInclusao")
                        .HasColumnType("date")
                        .HasColumnName("simples_inclusao");

                    b.Property<bool?>("SimplesOpcao")
                        .HasColumnType("boolean")
                        .HasColumnName("simples_opcao");

                    b.HasKey("Id");

                    b.ToTable("rfb_simples");
                });

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.Motivo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("rfb_motivos");
                });

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("rfb_municipios");
                });

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.NaturezaJuridica", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("rfb_naturezas_juridicas");
                });

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("rfb_paises");
                });

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.Qualificacao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("rfb_qualificacoes");
                });

            modelBuilder.Entity("Qute.Rfb.Shared.Entities.Socio", b =>
                {
                    b.Property<int>("Cnpj")
                        .HasColumnType("integer")
                        .HasColumnName("cnpj");

                    b.Property<string>("CpfCnpj")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("cpf_cnpj");

                    b.Property<DateOnly?>("DataEntrada")
                        .HasColumnType("date")
                        .HasColumnName("data_entrada");

                    b.Property<int?>("FaixaEtaria")
                        .HasColumnType("integer")
                        .HasColumnName("faixa_etaria");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nome");

                    b.Property<int?>("PaisId")
                        .HasColumnType("integer")
                        .HasColumnName("pais_id");

                    b.Property<int?>("QualificacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("qualificacao_id");

                    b.Property<string>("RepresentanteCpfCnpj")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("representante_cpf_cnpj");

                    b.Property<string>("RepresentanteNome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("representante_nome");

                    b.Property<int?>("RepresentanteQualificacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("representante_qualificacao_id");

                    b.Property<int?>("Tipo")
                        .HasColumnType("integer")
                        .HasColumnName("tipo");

                    b.HasIndex("Cnpj")
                        .HasDatabaseName("ix_socios_cnpj");

                    b.ToTable("rfb_socios");
                });
#pragma warning restore 612, 618
        }
    }
}
